package com.benner.regulador;
import java.util.Map;
import java.util.HashMap;
import org.jbpm.casemgmt.api.CaseService;
import org.jbpm.casemgmt.api.model.instance.CaseFileInstance;
import org.jbpm.document.Document;
import org.jbpm.services.api.service.ServiceRegistry;
import org.kie.api.runtime.process.CaseData;

import org.kie.api.runtime.process.WorkflowProcessInstance;


rule "Testando o case file em drl"
    ruleflow-group "@@@-case-@@@"
    dialect "mvel"
    when
	    $processInstance: WorkflowProcessInstance()
        $caseData : CaseFileInstance()
        //$controle : controle()
        //Document(name == "invalid.pdf") from $caseData.getData("hwSpec")
        $controle: controle() from $caseData.getData("controle")
        
    then
        //$controle.setProcess_id($processInstance.getId());
        $processInstance.setVariable("emailTo","luiza.garcia@triopropaganda.com")
        retract($processInstance);	    
    	System.out.println("Entrou no teste do caseFile");
        System.out.println($caseData.getData());
        System.out.println($caseData.getData("controle"));
        //System.out.println($controle.getNome());
    	
    	
end


rule "Encerrando / fechando um CASE"
    ruleflow-group "Regulador:fechamentoCase"
    dialect "mvel"
    when
        $caseData : CaseFileInstance()
        $caseData.getData("hwSpec")=="FINALIZADO"
    then:
        //closeCase(String caseId, String comment) throws CaseNotFoundException;
        CaseService caseService = (CaseService) ServiceRegistry.get().service(ServiceRegistry.CASE_SERVICE);
        //caseService.triggerAdHocFragment($caseData.getCaseId(), "_620B0E74-D6EF-4746-9BCD-E9BF73AFC37D", "Order new Drugs", null);
        caseService.closeCase(caseId,"fechado com sucesso");
